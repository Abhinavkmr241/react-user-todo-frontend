[{"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/index.js":"1","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/polyfill.js":"2","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/App.js":"3","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/serviceWorker.js":"4","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultLayout.js":"5","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultHeader.js":"6","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultFooter.js":"7","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultAside.js":"8","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/_nav.js":"9","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/user-data.js":"10","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/components/protected-routes.jsx":"11","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/todos-page.jsx":"12","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/profile-preview-page.jsx":"13","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/action-types.js":"14","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/loader-data.js":"15","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/http/http-calls.js":"16","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/todos-element-page.jsx":"17","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/http/http-service.js":"18","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/config.js":"19","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/http/token-interceptor.js":"20","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/store.js":"21","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/components/public-route.jsx":"22","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/forgot-password-page.jsx":"23","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/login-page.jsx":"24","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/signup-page.jsx":"25","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/reducers/index.js":"26","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/reducers/loader-data.js":"27","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/reducers/user-data.js":"28","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/index.js":"29"},{"size":621,"mtime":1612763633412,"results":"30","hashOfConfig":"31"},{"size":1398,"mtime":1612763633412,"results":"32","hashOfConfig":"31"},{"size":1606,"mtime":1612763633412,"results":"33","hashOfConfig":"31"},{"size":4686,"mtime":1612763633412,"results":"34","hashOfConfig":"31"},{"size":2888,"mtime":1612763633412,"results":"35","hashOfConfig":"31"},{"size":2277,"mtime":1612763633412,"results":"36","hashOfConfig":"31"},{"size":1021,"mtime":1612763633412,"results":"37","hashOfConfig":"31"},{"size":14986,"mtime":1612763633412,"results":"38","hashOfConfig":"31"},{"size":6113,"mtime":1612763633412,"results":"39","hashOfConfig":"31"},{"size":257,"mtime":1612763633412,"results":"40","hashOfConfig":"31"},{"size":539,"mtime":1612763633412,"results":"41","hashOfConfig":"31"},{"size":7489,"mtime":1612763633412,"results":"42","hashOfConfig":"31"},{"size":10442,"mtime":1613381676657,"results":"43","hashOfConfig":"31"},{"size":179,"mtime":1612763633412,"results":"44","hashOfConfig":"31"},{"size":299,"mtime":1612763633412,"results":"45","hashOfConfig":"31"},{"size":5039,"mtime":1613551912676,"results":"46","hashOfConfig":"31"},{"size":5285,"mtime":1613552487531,"results":"47","hashOfConfig":"31"},{"size":6887,"mtime":1612763633412,"results":"48","hashOfConfig":"31"},{"size":93,"mtime":1612763633412,"results":"49","hashOfConfig":"31"},{"size":480,"mtime":1612763633412,"results":"50","hashOfConfig":"31"},{"size":761,"mtime":1612763633412,"results":"51","hashOfConfig":"31"},{"size":531,"mtime":1612763633412,"results":"52","hashOfConfig":"31"},{"size":7138,"mtime":1612763633412,"results":"53","hashOfConfig":"31"},{"size":8649,"mtime":1612763633412,"results":"54","hashOfConfig":"31"},{"size":12184,"mtime":1612763633412,"results":"55","hashOfConfig":"31"},{"size":97,"mtime":1612763633412,"results":"56","hashOfConfig":"31"},{"size":732,"mtime":1612763633412,"results":"57","hashOfConfig":"31"},{"size":561,"mtime":1612763633412,"results":"58","hashOfConfig":"31"},{"size":189,"mtime":1612763633412,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"o2m8kj",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/index.js",[],["128","129"],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/polyfill.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/App.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/serviceWorker.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultLayout.js",["130","131","132"],"import React, { Component, Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport * as router from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { removeUser } from '../../redux/actions/user-data';\nimport { ToastsStore } from \"react-toasts\";\n\nimport {\n  AppAside,\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppBreadcrumb2 as AppBreadcrumb,\n  AppSidebarNav2 as AppSidebarNav,\n} from '@coreui/react';\n// sidebar nav config\nimport navigation from '../../_nav';\nimport ProtectedRoute from '../../components/protected-routes';\nimport ToDos from './../../pages/todos-page';\nimport ProfilePreview from \"../../pages/profile-preview-page\"\n\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nclass DefaultLayout extends Component {\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  signOut(e) {\n    e.preventDefault();\n    this.props.removeUser();\n    localStorage.clear();\n    ToastsStore.success(\"Logged out successfully...\");\n    this.props.history.push('/login')\n  }\n\n  componentDidMount() {\n    console.log('in layout :>> ');\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader fixed>\n          <Suspense fallback={this.loading()}>\n            <DefaultHeader onLogout={e => this.signOut(e)} />\n          </Suspense>\n        </AppHeader>\n        <div className=\"app-body\">\n          <AppSidebar fixed>\n            <AppSidebarHeader />\n            <AppSidebarForm />\n            <Suspense>\n              <AppSidebarNav navConfig={navigation} {...this.props} router={router} />\n            </Suspense>\n            <AppSidebarFooter />\n            <AppSidebarMinimizer />\n          </AppSidebar>\n          <main className=\"main\">\n            <Switch>\n\n              <ProtectedRoute\n                path={`/todos`}\n                component={ToDos}\n                redirectRoute={\"/login\"}\n              />\n\n              <ProtectedRoute\n                path={`/profile-preview`}\n                component={ProfilePreview}\n                redirectRoute={\"/login\"}\n              />\n\n              <Route path=\"/\" render={() => <Redirect to=\"/todos\" />} />\n            </Switch>\n          </main>\n        </div>\n        <AppFooter>\n          <Suspense fallback={this.loading()}>\n            <DefaultFooter />\n          </Suspense>\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeUser: () => dispatch(removeUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultHeader.js",["133","134","135"],"import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Badge, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\nimport logo from '../../assets/img/company-logo.png'\nimport sygnet from '../../assets/img/brand/sygnet.svg'\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultHeader extends Component {\n  \n  render() {\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n\n    return (\n      <React.Fragment>\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n        <AppNavbarBrand\n          full={{ src: logo, width: 85, height: 24, alt: 'Link Tree Logo' }}\n          minimized={{ src: sygnet, width: 30, height: 30, alt: 'Link Tree Logo' }}\n        />\n        {/* <AppSidebarToggler className=\"d-lg-none\" display=\"md\" /> */}\n\n        <Nav className=\"d-md-down-none pt-1 ml-1\" navbar>\n          <NavItem className=\"px-2\">\n            <Link to=\"/todos\" className=\"nav-link\">\n              ToDos\n            </Link>\n          </NavItem>\n        </Nav>\n        <Nav className=\"ml-auto pt-1\" navbar>\n          <UncontrolledDropdown nav direction=\"down\" className=\"mr-3 ml-1\">\n            <DropdownToggle nav>\n              <img src={'../../assets/img/user-img-default.png'} className=\"img-avatar mr-1\" alt=\"User Img\" />\n              <i className=\"fa fa-caret-down\"></i>\n            </DropdownToggle>\n            <DropdownMenu right className=\"mt-2\">\n            <DropdownItem>\n              <Link to=\"/profile-preview\"><i className=\"fa fa-user\"></i> Profile</Link>\n              </DropdownItem>\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-power-off\"></i> Logout</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\n        {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultHeader.propTypes = propTypes;\nDefaultHeader.defaultProps = defaultProps;\n\nexport default DefaultHeader;\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultFooter.js",["136","137"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultFooter extends Component {\n  render() {\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className=\"d-flex justify-content-start align-items-center\">\n          <span className=\"d-inline-block mr-2\">&copy; 2020 Link Tree.</span>\n          <Button color=\"link\">\n            Terms\n          </Button>\n          <Button color=\"link\">\n            Privacy\n          </Button>\n        </div>\n        <div>\n          Powered By \n          <img src={'../../assets/img/ls-logo.png'} className=\"ls-logo\" /> <a href=\"https://logic-square.com\" target=\"_blank\">Logic Square</a>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultFooter.propTypes = propTypes;\nDefaultFooter.defaultProps = defaultProps;\n\nexport default DefaultFooter;\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/containers/DefaultLayout/DefaultAside.js",["138","139"],"import React, { Component } from 'react';\nimport { Nav, NavItem, NavLink, Progress, TabContent, TabPane, ListGroup, ListGroupItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { AppSwitch } from '@coreui/react'\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultAside extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1',\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  render() {\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Nav tabs>\n          <NavItem>\n            <NavLink className={classNames({ active: this.state.activeTab === '1' })}\n                     onClick={() => {\n                       this.toggle('1');\n                     }}>\n              <i className=\"icon-list\"></i>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className={classNames({ active: this.state.activeTab === '2' })}\n                     onClick={() => {\n                       this.toggle('2');\n                     }}>\n              <i className=\"icon-speech\"></i>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className={classNames({ active: this.state.activeTab === '3' })}\n                     onClick={() => {\n                       this.toggle('3');\n                     }}>\n              <i className=\"icon-settings\"></i>\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <ListGroup className=\"list-group-accent\" tag={'div'}>\n              <ListGroupItem className=\"list-group-item-accent-secondary bg-light text-center font-weight-bold text-muted text-uppercase small\">Today</ListGroupItem>\n              <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-warning list-group-item-divider\">\n                <div className=\"avatar float-right\">\n                  <img className=\"img-avatar\" src={'assets/img/avatars/7.jpg\" alt=\"admin@bootstrapmaster.com'} />\n                </div>\n                <div>Meeting with <strong>Lucas</strong> </div>\n                <small className=\"text-muted mr-3\">\n                  <i className=\"icon-calendar\"></i>&nbsp; 1 - 3pm\n                </small>\n                <small className=\"text-muted\">\n                  <i className=\"icon-location-pin\"></i> Palo Alto, CA\n                </small>\n              </ListGroupItem>\n              <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-info list-group-item-divider\">\n                <div className=\"avatar float-right\">\n                  <img className=\"img-avatar\" src={'assets/img/avatars/4.jpg\" alt=\"admin@bootstrapmaster.com'} />\n                </div>\n                <div>Skype with <strong>Megan</strong></div>\n                <small className=\"text-muted mr-3\">\n                  <i className=\"icon-calendar\"></i>&nbsp; 4 - 5pm\n                </small>\n                <small className=\"text-muted\">\n                  <i className=\"icon-social-skype\"></i> On-line\n                </small>\n              </ListGroupItem>\n              <ListGroupItem className=\"list-group-item-accent-secondary bg-light text-center font-weight-bold text-muted text-uppercase small\">Tomorrow</ListGroupItem>\n              <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-danger list-group-item-divider\">\n                <div>New UI Project - <strong>deadline</strong></div>\n                <small className=\"text-muted mr-3\"><i className=\"icon-calendar\"></i>&nbsp; 10 - 11pm</small>\n                <small className=\"text-muted\"><i className=\"icon-home\"></i>&nbsp; creativeLabs HQ</small>\n                <div className=\"avatars-stack mt-2\">\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/2.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/3.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/4.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/5.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/6.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                </div>\n              </ListGroupItem>\n              <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-success list-group-item-divider\">\n                <div><strong>#10 Startups.Garden</strong> Meetup</div>\n                <small className=\"text-muted mr-3\"><i className=\"icon-calendar\"></i>&nbsp; 1 - 3pm</small>\n                <small className=\"text-muted\"><i className=\"icon-location-pin\"></i>&nbsp; Palo Alto, CA</small>\n              </ListGroupItem>\n              <ListGroupItem action tag=\"a\" href=\"#\" className=\"list-group-item-accent-primary list-group-item-divider\">\n                <div><strong>Team meeting</strong></div>\n                <small className=\"text-muted mr-3\"><i className=\"icon-calendar\"></i>&nbsp; 4 - 6pm</small>\n                <small className=\"text-muted\"><i className=\"icon-home\"></i>&nbsp; creativeLabs HQ</small>\n                <div className=\"avatars-stack mt-2\">\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/2.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/3.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/4.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/5.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/6.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/7.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                  <div className=\"avatar avatar-xs\">\n                    <img src={'assets/img/avatars/8.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  </div>\n                </div>\n              </ListGroupItem>\n            </ListGroup>\n          </TabPane>\n          <TabPane tabId=\"2\" className=\"p-3\">\n            <div className=\"message\">\n              <div className=\"py-3 pb-5 mr-3 float-left\">\n                <div className=\"avatar\">\n                  <img src={'assets/img/avatars/7.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  <span className=\"avatar-status badge-success\"></span>\n                </div>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lukasz Holeczek</small>\n                <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n              </div>\n              <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n              <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                tempor incididunt...\n              </small>\n            </div>\n            <hr />\n            <div className=\"message\">\n              <div className=\"py-3 pb-5 mr-3 float-left\">\n                <div className=\"avatar\">\n                  <img src={'assets/img/avatars/7.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  <span className=\"avatar-status badge-success\"></span>\n                </div>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lukasz Holeczek</small>\n                <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n              </div>\n              <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n              <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                tempor incididunt...\n              </small>\n            </div>\n            <hr />\n            <div className=\"message\">\n              <div className=\"py-3 pb-5 mr-3 float-left\">\n                <div className=\"avatar\">\n                  <img src={'assets/img/avatars/7.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  <span className=\"avatar-status badge-success\"></span>\n                </div>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lukasz Holeczek</small>\n                <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n              </div>\n              <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n              <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                tempor incididunt...\n              </small>\n            </div>\n            <hr />\n            <div className=\"message\">\n              <div className=\"py-3 pb-5 mr-3 float-left\">\n                <div className=\"avatar\">\n                  <img src={'assets/img/avatars/7.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  <span className=\"avatar-status badge-success\"></span>\n                </div>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lukasz Holeczek</small>\n                <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n              </div>\n              <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n              <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                tempor incididunt...\n              </small>\n            </div>\n            <hr />\n            <div className=\"message\">\n              <div className=\"py-3 pb-5 mr-3 float-left\">\n                <div className=\"avatar\">\n                  <img src={'assets/img/avatars/7.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" />\n                  <span className=\"avatar-status badge-success\"></span>\n                </div>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lukasz Holeczek</small>\n                <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n              </div>\n              <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n              <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                tempor incididunt...\n              </small>\n            </div>\n          </TabPane>\n          <TabPane tabId=\"3\" className=\"p-3\">\n            <h6>Settings</h6>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-4\">\n                <small><b>Option 1</b></small>\n                <AppSwitch className={'float-right'} variant={'pill'} label color={'success'} defaultChecked size={'sm'}/>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                  tempor incididunt ut labore et dolore magna aliqua.\n                </small>\n              </div>\n            </div>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-3\">\n                <small><b>Option 2</b></small>\n                <AppSwitch className={'float-right'} variant={'pill'} label color={'success'} size={'sm'}/>\n              </div>\n              <div>\n                <small className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                  tempor incididunt ut labore et dolore magna aliqua.\n                </small>\n              </div>\n            </div>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-3\">\n                <small><b>Option 3</b></small>\n                <AppSwitch className={'float-right'} variant={'pill'} label color={'success'} defaultChecked size={'sm'} disabled/>\n                <div>\n                  <small className=\"text-muted\">Option disabled.</small>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-3\">\n                <small><b>Option 4</b></small>\n                <AppSwitch className={'float-right'} variant={'pill'} label color={'success'} defaultChecked size={'sm'} />\n              </div>\n            </div>\n\n            <hr />\n            <h6>System Utilization</h6>\n\n            <div className=\"text-uppercase mb-1 mt-4\">\n              <small><b>CPU Usage</b></small>\n            </div>\n            <Progress className=\"progress-xs\" color=\"info\" value=\"25\" />\n            <small className=\"text-muted\">348 Processes. 1/4 Cores.</small>\n\n            <div className=\"text-uppercase mb-1 mt-2\">\n              <small><b>Memory Usage</b></small>\n            </div>\n            <Progress className=\"progress-xs\" color=\"warning\" value=\"70\" />\n            <small className=\"text-muted\">11444GB/16384MB</small>\n\n            <div className=\"text-uppercase mb-1 mt-2\">\n              <small><b>SSD 1 Usage</b></small>\n            </div>\n            <Progress className=\"progress-xs\" color=\"danger\" value=\"95\" />\n            <small className=\"text-muted\">243GB/256GB</small>\n\n            <div className=\"text-uppercase mb-1 mt-2\">\n              <small><b>SSD 2 Usage</b></small>\n            </div>\n            <Progress className=\"progress-xs\" color=\"success\" value=\"10\" />\n            <small className=\"text-muted\">25GB/256GB</small>\n          </TabPane>\n        </TabContent>\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultAside.propTypes = propTypes;\nDefaultAside.defaultProps = defaultProps;\n\nexport default DefaultAside;\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/_nav.js",["140"],"export default {\n  items: [\n    {\n      name: 'Dashboard',\n      url: '/dashboard',\n      icon: 'icon-speedometer',\n      badge: {\n        variant: 'info',\n        text: 'NEW',\n      },\n    },\n    {\n      title: true,\n      name: 'Theme',\n      wrapper: {            // optional wrapper object\n        element: '',        // required valid HTML5 element tag\n        attributes: {}        // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\n      },\n      class: ''             // optional class names space delimited list for title item ex: \"text-center\"\n    },\n    {\n      name: 'Colors',\n      url: '/theme/colors',\n      icon: 'icon-drop',\n    },\n    {\n      name: 'Typography',\n      url: '/theme/typography',\n      icon: 'icon-pencil',\n    },\n    {\n      title: true,\n      name: 'Components',\n      wrapper: {\n        element: '',\n        attributes: {},\n      },\n    },\n    {\n      name: 'Base',\n      url: '/base',\n      icon: 'icon-puzzle',\n      children: [\n        {\n          name: 'Breadcrumbs',\n          url: '/base/breadcrumbs',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Cards',\n          url: '/base/cards',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Carousels',\n          url: '/base/carousels',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Collapses',\n          url: '/base/collapses',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Dropdowns',\n          url: '/base/dropdowns',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Forms',\n          url: '/base/forms',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Jumbotrons',\n          url: '/base/jumbotrons',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'List groups',\n          url: '/base/list-groups',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Navs',\n          url: '/base/navs',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Paginations',\n          url: '/base/paginations',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Popovers',\n          url: '/base/popovers',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Progress Bar',\n          url: '/base/progress-bar',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Switches',\n          url: '/base/switches',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Tables',\n          url: '/base/tables',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Tabs',\n          url: '/base/tabs',\n          icon: 'icon-puzzle',\n        },\n        {\n          name: 'Tooltips',\n          url: '/base/tooltips',\n          icon: 'icon-puzzle',\n        },\n      ],\n    },\n    {\n      name: 'Buttons',\n      url: '/buttons',\n      icon: 'icon-cursor',\n      children: [\n        {\n          name: 'Buttons',\n          url: '/buttons/buttons',\n          icon: 'icon-cursor',\n        },\n        {\n          name: 'Button dropdowns',\n          url: '/buttons/button-dropdowns',\n          icon: 'icon-cursor',\n        },\n        {\n          name: 'Button groups',\n          url: '/buttons/button-groups',\n          icon: 'icon-cursor',\n        },\n        {\n          name: 'Brand Buttons',\n          url: '/buttons/brand-buttons',\n          icon: 'icon-cursor',\n        },\n      ],\n    },\n    {\n      name: 'Charts',\n      url: '/charts',\n      icon: 'icon-pie-chart',\n    },\n    {\n      name: 'Icons',\n      url: '/icons',\n      icon: 'icon-star',\n      children: [\n        {\n          name: 'CoreUI Icons',\n          url: '/icons/coreui-icons',\n          icon: 'icon-star',\n          badge: {\n            variant: 'info',\n            text: 'NEW',\n          },\n        },\n        {\n          name: 'Flags',\n          url: '/icons/flags',\n          icon: 'icon-star',\n        },\n        {\n          name: 'Font Awesome',\n          url: '/icons/font-awesome',\n          icon: 'icon-star',\n          badge: {\n            variant: 'secondary',\n            text: '4.7',\n          },\n        },\n        {\n          name: 'Simple Line Icons',\n          url: '/icons/simple-line-icons',\n          icon: 'icon-star',\n        },\n      ],\n    },\n    {\n      name: 'Notifications',\n      url: '/notifications',\n      icon: 'icon-bell',\n      children: [\n        {\n          name: 'Alerts',\n          url: '/notifications/alerts',\n          icon: 'icon-bell',\n        },\n        {\n          name: 'Badges',\n          url: '/notifications/badges',\n          icon: 'icon-bell',\n        },\n        {\n          name: 'Modals',\n          url: '/notifications/modals',\n          icon: 'icon-bell',\n        },\n      ],\n    },\n    {\n      name: 'Widgets',\n      url: '/widgets',\n      icon: 'icon-calculator',\n      badge: {\n        variant: 'info',\n        text: 'NEW',\n      },\n    },\n    {\n      divider: true,\n    },\n    {\n      title: true,\n      name: 'Extras',\n    },\n    {\n      name: 'Pages',\n      url: '/pages',\n      icon: 'icon-star',\n      children: [\n        {\n          name: 'Login',\n          url: '/login',\n          icon: 'icon-star',\n        },\n        {\n          name: 'Register',\n          url: '/register',\n          icon: 'icon-star',\n        },\n        {\n          name: 'Error 404',\n          url: '/404',\n          icon: 'icon-star',\n        },\n        {\n          name: 'Error 500',\n          url: '/500',\n          icon: 'icon-star',\n        },\n      ],\n    },\n    {\n      name: 'Disabled',\n      url: '/dashboard',\n      icon: 'icon-ban',\n      attributes: { disabled: true },\n    },\n    {\n      name: 'Download CoreUI',\n      url: 'https://coreui.io/react/',\n      icon: 'icon-cloud-download',\n      class: 'mt-auto',\n      variant: 'success',\n      attributes: { target: '_blank', rel: \"noopener\" },\n    },\n    {\n      name: 'Try CoreUI PRO',\n      url: 'https://coreui.io/pro/react/',\n      icon: 'icon-layers',\n      variant: 'danger',\n      attributes: { target: '_blank', rel: \"noopener\" },\n    },\n  ],\n};\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/user-data.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/components/protected-routes.jsx",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/todos-page.jsx",["141","142","143","144"],"import React, { Component } from 'react';\nimport { Col, Container, Row, Button, Card, CardBody, FormGroup, Label, Input, CustomInput } from 'reactstrap';\nimport { todoList, addTodo, userDetails, editTodo } from '../http/http-calls';\nimport { ToastsStore } from 'react-toasts';\nimport { connect } from \"react-redux\";\nimport { showLoader, hideLoader } from \"../redux/actions/loader-data\";\nimport { TodoElement } from \"./todos-element-page\";\n\nclass Todos extends Component {\n  state = {\n    message: '',\n    userName: '',\n    todoList: [],\n    selectedType: '',\n    marked: false\n  }\n\n  componentDidMount() {\n    this.props.showLoader();\n    userDetails().then((resp) => {\n      this.props.hideLoader();\n      console.log(\"User details resp here :- \", resp);\n      this.setState({\n        userName: resp.user.name.full\n      });\n    }).catch((err) => {\n      this.props.hideLoader();\n      ToastsStore.error(\"User details loading failed :- \" + err.reason);\n    });\n    this._getTodoList();\n  }\n\n  _getTodoList = () => {\n    this.props.showLoader();\n    todoList().then((resp) => {\n      this.props.hideLoader();\n      console.log(\"Todo list resp here :- \", resp);\n      this.setState({\n        todoList: resp.todos\n      });\n    }).catch((err) => {\n      this.props.hideLoader();\n      ToastsStore.error(\"Todo list loading failed :- \" + err.reason);\n    });\n  }\n\n  _setSelectedType = (type) => {\n    if (type === \"Active\") {\n      this.setState({ selectedType: \"Active\" });\n    } else if (type === \"Completed\") {\n      this.setState({ selectedType: \"Completed\" });\n    } else {\n      this.setState({ selectedType: \"All\" });\n    }\n  }\n\n  _showTodoList = (type) => {\n    let listArray = '';\n    let { todoList } = this.state;\n    if (todoList.length) {\n      if (type === \"Active\") {\n        listArray = todoList.map((todo) => {\n          if (todo.isActive) {\n            return (\n              <div>\n                <TodoElement key={todo._id} todo={todo} reload={() => this._getTodoList()} />\n              </div>\n            )\n          }\n        });\n      } else if (type === \"Completed\") {\n        listArray = todoList.map((todo) => {\n          if (!todo.isActive) {\n            return (\n              <div>\n                <TodoElement key={todo._id} todo={todo} reload={() => this._getTodoList()} />\n              </div>\n            )\n          }\n        });\n      } else {\n        listArray = todoList.map((todo) => {\n          return (\n            <div>\n              <TodoElement key={todo._id} todo={todo} reload={() => this._getTodoList()} />\n            </div>\n          )\n        });\n      }\n    } else {\n      listArray += \"No Todo yet!!!\";\n    }\n    return listArray;\n  }\n\n  _handleOnChange = (value) => {\n    this.setState({ message: value });\n  }\n\n  _addTodo = (e) => {\n    e.preventDefault();\n    const { message } = this.state;\n    if ((message !== undefined) && (message !== null)) {\n      let todoData = {\n        message: message\n      };\n      this.props.showLoader();\n      addTodo(todoData).then((resp) => {\n        this.props.hideLoader();\n        console.log(\"Adding todo resp here :- \", resp);\n        ToastsStore.success(\"Todo added successfully...\");\n        this.setState({\n          message: ''\n        });\n        this._getTodoList();\n      }).catch((err) => {\n        this.props.hideLoader();\n        ToastsStore.error(\"Adding Todo failed :- \" + err.reason);\n      });\n    } else {\n      ToastsStore.error(\"No message to add!!!\");\n    }\n  }\n\n  _markAll = (temp) => {\n    if (temp) {\n      let todoData = {\n        isActive: false\n      };\n      this.state.todoList.map((todo) => {\n        editTodo(todoData, todo._id).then((resp) => {\n          console.log(resp);\n          this._getTodoList();\n        }).catch((err) => {\n          console.log(err);\n        });\n      });\n      this.setState({ marked: true });\n    } else {\n      let todoData = {\n        isActive: true\n      };\n      this.state.todoList.map((todo) => {\n        editTodo(todoData, todo._id).then((resp) => {\n          console.log(resp);\n          this._getTodoList();\n        }).catch((err) => {\n          console.log(err);\n        });\n      });\n      this.setState({ marked: false });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row animated fadeIn innerPagesBg\">\n        <Container>\n          <Row>\n            <Col md=\"12\">\n              <div className=\"profilePreviewWrap\">\n                <div>\n                  <div className=\"text-center\">\n                    <h5>{`Welcome ${this.state.userName}`}</h5>\n                  </div>\n                  <div className=\"mt-4\">\n                    <FormGroup>\n                      <Label>Message</Label>\n                      <Input type=\"text\" placeholder=\"Enter what to do...\"\n                        value={this.state.message}\n                        onChange={(e) => this._handleOnChange(e.target.value)}\n                      />\n                    </FormGroup>\n                    <Button className=\"modalBtnSave\"\n                      onClick={(e) => this._addTodo(e)}\n                    >\n                      Add\n                      </Button>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <div className=\"addedLinksWrapper\">\n                <div className=\"d-flex justify-content-between align-items-center my-3\">\n                  <h4 className=\"pg-title\">ToDos</h4>\n                </div>\n\n                <Card className=\"userDetails mb-4\">\n                  <CardBody>\n                    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\" }}>\n                      <div>\n                        <CustomInput type=\"switch\" id=\"exampleCustomSwitch\" name=\"customSwitch\"\n                          label={this.state.marked ? \"Unmark All\" : \"Mark All\"}\n                          className=\"disableLink\" onClick={(e) => this._markAll(e.target.checked)}\n                        />\n                      </div>\n                      <div>\n                        <Button className=\"modalBtnSave\"\n                          onClick={() => this._setSelectedType(\"All\")}\n                        >\n                          All\n                        </Button>\n                      </div>\n                      <div>\n                        <Button className=\"modalBtnSave\"\n                          onClick={() => this._setSelectedType(\"Active\")}\n                        >\n                          Active\n                        </Button>\n                      </div>\n                      <div>\n                        <Button className=\"modalBtnSave\"\n                          onClick={() => this._setSelectedType(\"Completed\")}\n                        >\n                          Completed\n                        </Button>\n                      </div>\n                    </div>\n                    {this._showTodoList(this.state.selectedType)}\n                  </CardBody>\n                </Card>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loaderData: state.loaderData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showLoader: (loaderData) => dispatch(showLoader(loaderData)),\n    hideLoader: (loaderData) => dispatch(hideLoader(loaderData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/profile-preview-page.jsx",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/action-types.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/loader-data.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/http/http-calls.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/todos-element-page.jsx",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/http/http-service.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/config.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/http/token-interceptor.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/store.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/components/public-route.jsx",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/forgot-password-page.jsx",["145","146","147","148","149","150","151","152","153","154"],"import React, { Component } from 'react';\nimport { forgotPassword } from '../http/http-calls';\nimport { Col, Container, Row, Carousel, CarouselIndicators, CarouselItem, CarouselCaption, Button, Form, Input, FormGroup, Label } from 'reactstrap';\nimport { ToastsStore } from \"react-toasts\";\nimport { connect } from \"react-redux\";\nimport { showLoader, hideLoader } from \"../redux/actions/loader-data\";\n\nconst items = [\n  {\n    header: 'Title',\n    caption: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam mattis bibendum orci sit amet aliquam.',\n  },\n];\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      user: {\n        email: ''\n      },\n      isDirty: {\n        email: false\n      },\n      errors: {}\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  login = (e, temp) => {\n    e.preventDefault();\n    if (temp) {\n      let isDirty = {\n        email: true\n      }\n      this.setState({ isDirty }, () => {\n        let errors = this._validateMail();\n        if (!errors) {\n          let data = {\n            handle: this.state.user.email\n          };\n          this.props.showLoader();\n          forgotPassword(data).then((resp) => {\n            this.props.hideLoader();\n            console.log(\"Reset password link resp here :- \", resp);\n            ToastsStore.success(\"Reset password link sent to mail successfully...\");\n            this.setState({\n              user: {\n                email: ''\n              },\n              isDirty: {\n                email: false\n              },\n              errors: {}\n            });\n            this.props.history.push('/login')\n          }).catch((err) => {\n            this.props.hideLoader();\n            ToastsStore.error(\"Sending reset password link failed :- \" + err.reason);\n          });\n        }\n      });\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  _handleInput = (field, value) => {\n    const { user, isDirty } = this.state;\n    user[field] = value;\n    isDirty[field] = true;\n    this.setState({ user, isDirty }, () => {\n      this._validateMail();\n    });\n  }\n\n  _validateMail = () => {\n    const { user, errors, isDirty } = this.state;\n    if (isDirty.email) {\n      if (!user.email.trim().length) {\n        errors.email = \"*Required\";\n      } else if (\n        user.email.trim().length &&\n        !new RegExp(\n          \"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\"\n        ).test(user.email)\n      ) {\n        errors.email = \"Enter a valid email ID\";\n      } else {\n        delete errors.email;\n        isDirty.email = false;\n      }\n    }\n    this.setState({ errors });\n    return Object.keys(errors).length ? errors : null;\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides2 = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n        >\n          <CarouselCaption captionText={item.caption} captionHeader={item.header} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <div className=\"app flex-row animated fadeIn\">\n        <Container fluid>\n          <Row>\n            <Col md=\"6\" lg=\"6\" className=\"loginPgLeftSide lightBlueBg\">\n              {/* don't remove the below div */}\n              <div style={{ visibility: 'hidden' }}>\n                <h3 className=\"pl-4\">Link Tree</h3>\n              </div>\n\n              <img src={'assets/img/forgot-password-img.svg'} alt=\"Forgot Password Img\" className=\"img-fluid loginImg\"></img>\n\n              <div className=\"loginContentLeftSide\">\n                <Carousel activeIndex={activeIndex} next={this.next} previous={this.previous}>\n                  {/* <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} /> */}\n                  {slides2}\n                </Carousel>\n              </div>\n            </Col>\n\n            <Col md=\"6\" lg=\"6\" className=\"loginPgRightSide\">\n              <div className=\"d-flex justify-content-between align-items-center pr-2 pl-3\">\n                <img src={'assets/img/company-logo.png'} alt=\"Login Img\" className=\"projectLogo\" />\n\n                <a href=\"javascript:void(0)\" className=\"backToLogin\" onClick={(e) => this.login(e, false)}>Back to Login</a>\n              </div>\n\n\n              <div className=\"w-100 justify-content-center d-flex flex-column align-items-center\">\n                <Form className=\"loginFormWrapper\">\n                  <h4>Forgot Password?</h4>\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input type=\"email\" placeholder=\"Your Email\"\n                      value={this.state.user.email}\n                      onChange={(e) =>\n                        this._handleInput(\"email\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.email}</small>\n                    )}\n                  </FormGroup>\n\n                  <Button className=\"recruitechThemeBtn loginBtn\" onClick={(e) => this.login(e, true)}>Reset Password</Button>\n                </Form>\n              </div>\n\n              {/* Footer */}\n              <div>\n                <div className=\"loginFooterLinks pl-3\">\n                  <a href=\"javascript:void(0)\">Terms</a>\n                  <a href=\"javascript:void(0)\">Privacy</a>\n                  <a href=\"javascript:void(0)\">Support</a>\n                </div>\n                <div className=\"copyrightWrap pl-3\">\n                  Link Tree &#169; 2020.\n                  <div>\n                    Powered By: <a href=\"https://www.logic-square.com/\" target=\"_blank\" className=\"lsWebsite\">\n                      Logic Square\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loaderData: state.loaderData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showLoader: (loaderData) => dispatch(showLoader(loaderData)),\n    hideLoader: (loaderData) => dispatch(hideLoader(loaderData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\n\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/login-page.jsx",["155","156","157","158","159","160","161","162","163","164","165"],"import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { addUser } from \"../redux/actions/user-data\";\nimport { showLoader, hideLoader } from \"../redux/actions/loader-data\";\nimport { login } from \"../http/http-calls\";\nimport { Col, Container, Row, Carousel, CarouselItem, CarouselCaption, Button, Form, Input, FormGroup, Label } from 'reactstrap';\nimport { ToastsStore } from \"react-toasts\";\n\nconst items = [\n  {\n    header: 'Title',\n    caption: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam mattis bibendum orci sit amet aliquam.',\n  },\n];\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      user: {\n        email: '',\n        password: ''\n      },\n      isDirty: {\n        email: false,\n        password: false\n      },\n      errors: {}\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  forgotPassword = () => {\n    this.props.history.push('/forgot-password')\n  }\n\n  requestDemo = () => {\n    this.props.history.push('/signup')\n  }\n\n  users = () => {\n    let isDirty = {\n      email: true,\n      password: true\n    };\n    this.setState({ isDirty }, () => {\n      let errors = this._validateForm();\n      if (!errors) {\n        let loginData = {\n          handle: this.state.user.email,\n          password: this.state.user.password\n        };\n        this.props.showLoader();\n        login(loginData).then((resp) => {\n          this.props.hideLoader();\n          console.log(\"Login resp here :- \", resp);\n          let user = {\n            token: resp.token\n          };\n          this.props.addUser({ user });\n          this.setState({\n            user: {\n              email: '',\n              password: ''\n            },\n            isDirty: {\n              email: false,\n              password: false\n            },\n            errors: {}\n          });\n          ToastsStore.success(\"Logged-In successfully...\")\n          this.props.history.push('/todos');\n        }).catch((err) => {\n          this.props.hideLoader();\n          ToastsStore.error(\"Login failed :- \"+ err.reason);\n        });\n      }\n    });\n  }\n\n  //handling input here\n  _handleOnChange = (field, value) => {\n    const { user, isDirty } = this.state;\n    user[field] = value;\n    isDirty[field] = true;\n    this.setState({ user, isDirty }, () => {\n      this._validateForm();\n    });\n  };\n\n  //for validation\n  _validateForm() {\n    const { user, errors, isDirty } = this.state;\n    Object.keys(user).forEach((each) => {\n      if (each === \"password\" && isDirty.password) {\n        if (!user.password.trim().length) {\n          errors[each] = \"*Required\";\n        } else {\n          delete errors[each];\n          isDirty.password = false;\n        }\n      } else if (each === \"email\" && isDirty.email) {\n        if (!user.email.trim().length) {\n          errors[each] = \"*Required\";\n        } else if (\n          user.email.trim().length &&\n          !new RegExp(\n            \"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\"\n          ).test(user.email)\n        ) {\n          errors.email = \"Enter a valid email ID\";\n        } else {\n          delete errors[each];\n          isDirty.email = false;\n        }\n      }\n    });\n    this.setState({ errors });\n    return Object.keys(errors).length ? errors : null;\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides2 = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n        >\n          <CarouselCaption captionText={item.caption} captionHeader={item.header} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <div className=\"app flex-row animated fadeIn\">\n        <Container fluid>\n          <Row>\n            <Col md=\"6\" lg=\"6\" className=\"loginPgLeftSide lightBlueBg\">\n              {/* don't remove the below div */}\n              <div style={{ visibility: 'hidden' }}>\n                <h3 className=\"pl-4\">My Todo</h3>\n              </div>\n\n              <img src={'assets/img/login-img.svg'} alt=\"Login Img\" className=\"img-fluid loginImg\"></img>\n\n              <div className=\"loginContentLeftSide\">\n                <Carousel activeIndex={activeIndex} next={this.next} previous={this.previous}>\n                  {/* <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} /> */}\n                  {slides2}\n                </Carousel>\n              </div>\n            </Col>\n\n            <Col md=\"6\" lg=\"6\" className=\"loginPgRightSide\">\n              <img src={'assets/img/company-logo.png'} alt=\"Login Img\" className=\"projectLogo pl-3\" />\n\n              <div className=\"w-100 justify-content-center d-flex flex-column align-items-center\">\n                <Form className=\"loginFormWrapper\">\n                  <h4>Login to your account</h4>\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input type=\"text\" placeholder=\"Enter\"\n                      value={this.state.user.email}\n                      onChange={(e) =>\n                        this._handleOnChange(\"email\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.email}</small>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <Input type=\"password\" placeholder=\"Enter\"\n                      value={this.state.user.password}\n                      onChange={(e) =>\n                        this._handleOnChange(\"password\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.password}</small>\n                    )}\n                  </FormGroup>\n                  <Button className=\"recruitechThemeBtn loginBtn\" onClick={this.users}>Login</Button>\n                </Form>\n\n                <div className=\"registerWrap\">\n                  <div className=\"ml-3\">\n                    {/* <Input type=\"checkbox\" id=\"rememberMe\" />\n                    <Label for=\"rememberMe\" className=\"mb-0\">Remember Me</Label> */}\n                  </div>\n\n                  <a href=\"javascript:void(0)\" className=\"forgotPassword\" onClick={this.forgotPassword}>Forgot Password?</a>\n                </div>\n\n                <div className=\"register\">\n                  Don't have an account? <a href=\"javascript:void(0)\" onClick={this.requestDemo}>Sign Up!</a>\n                </div>\n              </div>\n\n              {/* Footer */}\n              <div>\n                <div className=\"loginFooterLinks pl-3\">\n                  <a href=\"javascript:void(0)\">Terms</a>\n                  <a href=\"javascript:void(0)\">Privacy</a>\n                  <a href=\"javascript:void(0)\">Support</a>\n                </div>\n                <div className=\"copyrightWrap pl-3\">\n                  My Todo &#169; 2021.\n                  <div>\n                    Powered By: <a href=\"https://www.logic-square.com/\" target=\"_blank\" className=\"lsWebsite\">\n                      Logic Square\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData,\n    loaderData: state.loaderData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addUser: (user) => dispatch(addUser(user)),\n    showLoader: (loaderData) => dispatch(showLoader(loaderData)),\n    hideLoader: (loaderData) => dispatch(hideLoader(loaderData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/pages/signup-page.jsx",["166","167","168","169","170","171","172","173","174"],"import React, { Component } from 'react';\nimport { ToastsStore } from \"react-toasts\";\nimport { Col, Container, Row, Carousel, CarouselItem, CarouselCaption, Button, Form, Input, FormGroup, Label } from 'reactstrap';\nimport { signUp, login } from '../http/http-calls';\nimport { connect } from \"react-redux\";\nimport { addUser } from \"../redux/actions/user-data\";\nimport { showLoader, hideLoader } from \"../redux/actions/loader-data\";\n\nconst items = [\n  {\n    header: 'Title',\n    caption: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam mattis bibendum orci sit amet aliquam.',\n  },\n];\n\nclass RequestDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      user: {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phone: \"\"\n      },\n      isDirty: {\n        email: false,\n        password: false,\n        firstName: false,\n        phone: false\n      },\n      errors: {},\n      visibility: false\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  login = (e, temp) => {\n    e.preventDefault();\n    if (temp) {\n      const { user } = this.state;\n      let isDirty = {\n        email: true,\n        password: true,\n        firstName: true,\n        phone: true\n      };\n      this.setState({ isDirty }, () => {\n        let errors = this._validateForm();\n        if (!errors) {\n          let signupData = {\n            email: user.email,\n            phone: user.phone,\n            password: user.password,\n            name: {\n              first: user.firstName,\n              last: user.lastName ? user.lastName : ''\n            }\n          };\n          this.props.showLoader();\n          signUp(signupData).then((resp) => {\n            this.props.hideLoader();\n            console.log(\"Signup resp here :- \", resp);\n            ToastsStore.success(\"Signup successfully...\")\n            let loginData = {\n              handle: resp.user.email,\n              password: user.password\n            };\n            this.props.showLoader();\n            login(loginData).then((resp) => {\n              this.props.hideLoader();\n              console.log(\"Login resp here :- \", resp);\n              let user = {\n                token: resp.token\n              };\n              this.props.addUser({ user });\n              this.setState({\n                user: {\n                  email: \"\",\n                  password: \"\",\n                  firstName: \"\",\n                  lastName: \"\",\n                  phone: \"\"\n                },\n                isDirty: {\n                  email: false,\n                  password: false,\n                  firstName: false,\n                  phone: false\n                },\n                errors: {}\n              });\n              ToastsStore.success(\"Logged-In successfully...\")\n              this.props.history.push('/todos');\n            }).catch((err) => {\n              this.props.hideLoader();\n              ToastsStore.error(\"Login failed :- \" + err.reason);\n            });\n          }).catch((err) => {\n            this.props.hideLoader();\n            ToastsStore.error(\"Signup failed :- \" + err.reason);\n          });\n        }\n      });\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  //handling input here\n  _handleOnChange = (field, value) => {\n    const { user, isDirty } = this.state;\n    user[field] = value;\n    if (field !== \"lastName\") {\n      isDirty[field] = true;\n    }\n    this.setState({ user, isDirty }, () => {\n      this._validateForm();\n    });\n  };\n\n  //for validation\n  _validateForm() {\n    const { user, errors, isDirty } = this.state;\n    Object.keys(user).forEach((each) => {\n      if (each === \"email\" && isDirty.email) {\n        if (!user.email.trim().length) {\n          errors.email = \"*Required\";\n        } else if (\n          user.email.trim().length &&\n          !new RegExp(\n            \"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\"\n          ).test(user.email)\n        ) {\n          errors.email = \"Enter a valid email ID\";\n        } else {\n          delete errors[each];\n          isDirty.email = false;\n        }\n      } else if (each === \"password\" && isDirty.password) {\n        if (!user.password.trim().length) {\n          errors[each] = \"*Required\";\n        } else {\n          delete errors[each];\n          isDirty.password = false;\n        }\n      } else if (each === \"firstName\" && isDirty.firstName) {\n        if (!user.firstName.trim().length) {\n          errors[each] = \"*Required\";\n        }\n        else {\n          delete errors[each];\n          isDirty.firstName = false;\n        }\n      } else if (each === \"phone\" && isDirty.phone) {\n        if (!user.phone.trim().length) {\n          errors[each] = \"*Required\";\n        } else if (user.phone.trim().length &&\n          !user.phone.match(/^[0-9]{10}$/)) {\n          errors[each] = \"Enter valid phone number\";\n        } else {\n          delete errors[each];\n          isDirty.phone = false;\n        }\n      }\n    });\n    this.setState({ errors });\n    return Object.keys(errors).length ? errors : null;\n  }\n\n  _handleVisibility = (e) => {\n    e.preventDefault();\n    let { visibility } = this.state;\n    visibility = !visibility;\n    this.setState({ visibility });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides2 = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n        >\n          <CarouselCaption captionText={item.caption} captionHeader={item.header} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <div className=\"app flex-row animated fadeIn\">\n        <Container fluid>\n          <Row>\n            <Col md=\"6\" lg=\"6\" className=\"loginPgLeftSide lightBlueBg\">\n              {/* don't remove the below div */}\n              <div style={{ visibility: 'hidden' }}>\n                <h3 className=\"pl-4\">My Todo</h3>\n              </div>\n\n              <img src={'assets/img/signup-img.svg'} alt=\"Sign Up Img\" className=\"img-fluid loginImg\"></img>\n\n              <div className=\"loginContentLeftSide\">\n                <Carousel activeIndex={activeIndex} next={this.next} previous={this.previous}>\n                  {/* <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} /> */}\n                  {slides2}\n                </Carousel>\n              </div>\n            </Col>\n\n            <Col md=\"6\" lg=\"6\" className=\"loginPgRightSide signupPgRightSide\">\n              <img src={'assets/img/company-logo.png'} alt=\"Login Img\" className=\"projectLogo pl-3 mb-3\" />\n\n              <div className=\"w-100 justify-content-center d-flex flex-column align-items-center\">\n                <Form className=\"loginFormWrapper requestDemoForm\">\n                  <h4>Sign Up</h4>\n\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input type=\"email\" placeholder=\"Enter Email\"\n                      value={this.state.user.email}\n                      onChange={(e) =>\n                        this._handleOnChange(\"email\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.email}</small>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>First Name</Label>\n                    <Input type=\"text\" placeholder=\"Enter first name\"\n                      value={this.state.user.firstName}\n                      onChange={(e) =>\n                        this._handleOnChange(\"firstName\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.firstName}</small>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>Last Name</Label>\n                    <Input type=\"text\" placeholder=\"Enter last name\"\n                      value={this.state.user.lastName}\n                      onChange={(e) =>\n                        this._handleOnChange(\"lastName\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.lastName}</small>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup className=\"position-relative\">\n                    <Label>Password</Label>\n                    <Input type={this.state.visibility ? \"text\" : \"password\"} placeholder=\"Enter Password\" style={{ paddingRight: 35 }}\n                      value={this.state.user.password}\n                      onChange={(e) =>\n                        this._handleOnChange(\"password\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.password}</small>\n                    )}\n                    <span className=\"fa fa-eye-slash eyeIcon\" onClick={(e) => this._handleVisibility(e)}></span>\n                  </FormGroup>\n\n                  <FormGroup className=\"position-relative\">\n                    <Label>Phone</Label>\n                    <Input type=\"number\" placeholder=\"phone\" style={{ paddingRight: 35 }}\n                      value={this.state.user.phone}\n                      onChange={(e) =>\n                        this._handleOnChange(\"phone\", e.target.value)\n                      }\n                    />\n                    {this.state.errors && (\n                      <small style={{ color: \"red\" }}>{this.state.errors.phone}</small>\n                    )}\n                  </FormGroup>\n\n                  <Button className=\"recruitechThemeBtn loginBtn\" style={{ marginTop: 30 }} onClick={(e) => this.login(e, true)}>Get Started</Button>\n                </Form>\n\n                <div className=\"register mt-0 mb-3\">\n                  Already have an account? <a href=\"javascript:void(0)\" onClick={(e) => this.login(e, false)}>Login</a>\n                </div>\n              </div>\n\n              {/* Footer */}\n              <div>\n                <div className=\"loginFooterLinks pl-3\">\n                  <a href=\"javascript:void(0)\">Terms</a>\n                  <a href=\"javascript:void(0)\">Privacy</a>\n                  <a href=\"javascript:void(0)\">Support</a>\n                </div>\n                <div className=\"copyrightWrap pl-3\">\n                  My Todo &#169; 2021.\n                  <div>\n                    Powered By: <a href=\"https://www.logic-square.com/\" target=\"_blank\" className=\"lsWebsite\">\n                      Logic Square\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.userData,\n    loaderData: state.loaderData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addUser: (user) => dispatch(addUser(user)),\n    showLoader: (loaderData) => dispatch(showLoader(loaderData)),\n    hideLoader: (loaderData) => dispatch(hideLoader(loaderData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestDemo);\n","/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/reducers/index.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/reducers/loader-data.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/reducers/user-data.js",[],"/home/abhinav/Desktop/LS/react-user-todo-frontend/src/redux/actions/index.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":11},{"ruleId":"179","severity":1,"message":"183","line":17,"column":21,"nodeType":"181","messageId":"182","endLine":17,"endColumn":34},{"ruleId":"179","severity":1,"message":"184","line":26,"column":7,"nodeType":"181","messageId":"182","endLine":26,"endColumn":19},{"ruleId":"179","severity":1,"message":"185","line":2,"column":16,"nodeType":"181","messageId":"182","endLine":2,"endColumn":23},{"ruleId":"179","severity":1,"message":"186","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":15},{"ruleId":"179","severity":1,"message":"187","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":30,"column":11,"nodeType":"190","endLine":30,"endColumn":75},{"ruleId":"191","severity":1,"message":"192","line":30,"column":76,"nodeType":"190","endLine":30,"endColumn":127},{"ruleId":"188","severity":1,"message":"189","line":71,"column":19,"nodeType":"190","endLine":71,"endColumn":114},{"ruleId":"188","severity":1,"message":"189","line":83,"column":19,"nodeType":"190","endLine":83,"endColumn":114},{"ruleId":"193","severity":1,"message":"194","line":1,"column":1,"nodeType":"195","endLine":280,"endColumn":3},{"ruleId":"196","severity":1,"message":"197","line":62,"column":41,"nodeType":"198","messageId":"199","endLine":62,"endColumn":43},{"ruleId":"196","severity":1,"message":"197","line":72,"column":41,"nodeType":"198","messageId":"199","endLine":72,"endColumn":43},{"ruleId":"196","severity":1,"message":"200","line":130,"column":38,"nodeType":"198","messageId":"201","endLine":130,"endColumn":40},{"ruleId":"196","severity":1,"message":"200","line":143,"column":38,"nodeType":"198","messageId":"201","endLine":143,"endColumn":40},{"ruleId":"179","severity":1,"message":"202","line":3,"column":41,"nodeType":"181","messageId":"182","endLine":3,"endColumn":59},{"ruleId":"203","severity":1,"message":"204","line":167,"column":17,"nodeType":"190","endLine":167,"endColumn":108},{"ruleId":"205","severity":1,"message":"206","line":167,"column":25,"nodeType":"207","messageId":"208","endLine":167,"endColumn":45},{"ruleId":"203","severity":1,"message":"204","line":194,"column":19,"nodeType":"190","endLine":194,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":194,"column":27,"nodeType":"207","messageId":"208","endLine":194,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":195,"column":19,"nodeType":"190","endLine":195,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":195,"column":27,"nodeType":"207","messageId":"208","endLine":195,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":196,"column":19,"nodeType":"190","endLine":196,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":196,"column":27,"nodeType":"207","messageId":"208","endLine":196,"endColumn":47},{"ruleId":"191","severity":1,"message":"192","line":201,"column":33,"nodeType":"190","endLine":201,"endColumn":111},{"ruleId":"203","severity":1,"message":"204","line":228,"column":19,"nodeType":"190","endLine":228,"endColumn":105},{"ruleId":"205","severity":1,"message":"206","line":228,"column":27,"nodeType":"207","messageId":"208","endLine":228,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":232,"column":42,"nodeType":"190","endLine":232,"endColumn":98},{"ruleId":"205","severity":1,"message":"206","line":232,"column":50,"nodeType":"207","messageId":"208","endLine":232,"endColumn":70},{"ruleId":"203","severity":1,"message":"204","line":239,"column":19,"nodeType":"190","endLine":239,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":239,"column":27,"nodeType":"207","messageId":"208","endLine":239,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":240,"column":19,"nodeType":"190","endLine":240,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":240,"column":27,"nodeType":"207","messageId":"208","endLine":240,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":241,"column":19,"nodeType":"190","endLine":241,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":241,"column":27,"nodeType":"207","messageId":"208","endLine":241,"endColumn":47},{"ruleId":"191","severity":1,"message":"192","line":246,"column":33,"nodeType":"190","endLine":246,"endColumn":111},{"ruleId":"203","severity":1,"message":"204","line":321,"column":44,"nodeType":"190","endLine":321,"endColumn":111},{"ruleId":"205","severity":1,"message":"206","line":321,"column":52,"nodeType":"207","messageId":"208","endLine":321,"endColumn":72},{"ruleId":"203","severity":1,"message":"204","line":328,"column":19,"nodeType":"190","endLine":328,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":328,"column":27,"nodeType":"207","messageId":"208","endLine":328,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":329,"column":19,"nodeType":"190","endLine":329,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":329,"column":27,"nodeType":"207","messageId":"208","endLine":329,"endColumn":47},{"ruleId":"203","severity":1,"message":"204","line":330,"column":19,"nodeType":"190","endLine":330,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":330,"column":27,"nodeType":"207","messageId":"208","endLine":330,"endColumn":47},{"ruleId":"191","severity":1,"message":"192","line":335,"column":33,"nodeType":"190","endLine":335,"endColumn":111},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'AppAside' is defined but never used.","Identifier","unusedVar","'AppBreadcrumb' is defined but never used.","'DefaultAside' is assigned a value but never used.","'NavLink' is defined but never used.","'Badge' is defined but never used.","'AppAsideToggler' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'CarouselIndicators' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]